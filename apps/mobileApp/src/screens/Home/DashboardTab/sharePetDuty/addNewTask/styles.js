import { Dimensions, StyleSheet } from 'react-native';
import {
  scaledHeightValue,
  scaledValue,
} from '../../../../../utils/design.utils';
import { fonts } from '../../../../../utils/fonts';
import { colors } from '../../../../../../assets/colors';

export const styles = StyleSheet.create({
  dashboardMainView: {
    flex: 1,
    backgroundColor: colors.themeColor,
  },
  ongoingText: {
    fontSize: scaledValue(18),
    lineHeight: scaledHeightValue(21.6),
    letterSpacing: scaledValue(18 * -0.01),
    color: colors.jetBlack,
  },
  plansText: {
    fontSize: scaledValue(18),
    lineHeight: scaledHeightValue(21.6),
    letterSpacing: scaledValue(18 * -0.01),
  },
  headerContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    marginTop: scaledValue(22),
  },
  petTitle: {
    fontSize: scaledValue(16),
    lineHeight: scaledHeightValue(19.2),
    letterSpacing: scaledValue(16 * -0.02),
    marginTop: scaledValue(4),
  },
  imgStyle: {
    width: scaledValue(60),
    height: scaledValue(60),
  },
  petItem: (selectedPetId, item) => ({
    alignItems: 'center',
    opacity: selectedPetId === item ? 0.5 : 1,
  }),
  petListContainer: {
    flexDirection: 'row',
    marginTop: scaledValue(12),
    gap: scaledValue(12),
  },
  input: {
    width: '100%',
    backgroundColor: 'transparent',
    fontSize: scaledValue(16),
    // lineHeight: scaledValue(16),
    paddingLeft: scaledValue(10),
    height: scaledValue(48),
    letterSpacing: scaledValue(16 * -0.03),
  },
  dateRow: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginTop: scaledValue(16),
    paddingHorizontal: scaledValue(12),
  },
  dateText: {
    fontSize: scaledValue(16),
    lineHeight: scaledHeightValue(19.2),
    letterSpacing: scaledValue(16 * -0.02),
  },
  linearView: {
    borderRadius: scaledValue(28),
    marginTop: scaledValue(4),
    // marginHorizontal: scaledValue(4),
  },
  placeView: (selectReminder, item) => ({
    borderRadius: scaledValue(28),
    height: scaledValue(40),
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: scaledValue(14),
    borderWidth: selectReminder === item ? scaledValue(1) : scaledValue(0.5),
    borderColor: selectReminder === item ? colors.primaryBlue : colors.darkPurple2,
    backgroundColor: selectReminder === item ? colors.paletteBlue : 'transparent',
  }),
  placeText: (selectReminder, item) => ({
    fontSize: scaledValue(14),
    lineHeight: scaledHeightValue(16.8),
    textAlign: 'center',
    color: selectReminder === item ? colors.primaryBlue : colors.darkPurple2,
    fontFamily: selectReminder === item ? fonts.SATOSHI_BOLD : fonts.SATOSHI_REGULAR,
  }),
  buttonStyle: {
    backgroundColor:colors?.jetBlack,
    width: '100%',
    height: scaledValue(52),
    borderRadius: scaledValue(28),
    alignItems: 'center',
    justifyContent: 'center',
    alignSelf: 'center',
    marginBottom: scaledValue(34),
    marginTop: scaledValue(62),
  },
  buttonText: {
    fontSize: scaledValue(18),
    lineHeight: scaledHeightValue(18),
    letterSpacing: scaledValue(16 * -0.01),
    fontFamily: fonts?.CLASH_GRO_MEDIUM,
    color: colors.white,
  },
  scrollView: { paddingHorizontal: scaledValue(20) },
  inputView: { paddingTop: scaledValue(32), gap: scaledValue(12) },
  innerInputView: {
    flexDirection: 'row',
    gap: scaledValue(8),
    justifyContent: 'space-between',
    width: '100%',
  },
  dateInput: {
    backgroundColor: 'transparent',
    fontSize: scaledValue(16),
    lineHeight: scaledValue(16),
    paddingLeft: scaledValue(10),
    height: scaledValue(48),
    // width: Dimensions.get('window').width / 2.3,
    letterSpacing: scaledValue(16 * -0.03),
  },
  iconStyle: { width: scaledValue(20), height: scaledValue(20) },
  reminderView: {
    marginTop: scaledValue(12),
    flexDirection: 'row',
    flexWrap: 'wrap',
    gap: scaledValue(8),
  },
  modalContainer: {
    backgroundColor: colors.white,
    borderRadius: scaledValue(24),
  },
  closeButton: {
    alignSelf: 'flex-end',
    marginTop: scaledValue(20),
    right: scaledValue(20),
  },
  closeIcon: { width: scaledValue(22), height: scaledValue(22) },
  modalTitle: {
    fontSize: scaledValue(20),
    lineHeight: scaledHeightValue(24),
    letterSpacing: scaledValue(20 * -0.01),
    color: '#1C1C1E',
    textAlign: 'center',
  },
  listView: { marginTop: scaledValue(40), gap: scaledValue(46) },
  itemView: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: scaledValue(24),
  },
  imgCalenderStyle: { width: scaledValue(24), height: scaledValue(24) },
  titleStyle: {
    color: '#333333',
    fontSize: scaledValue(16),
    lineHeight: scaledHeightValue(19.2),
    letterSpacing: scaledValue(16 * -0.02),
    marginLeft: scaledValue(8),
  },
  connectStyle: {
    color: colors.jetBlack,
    fontSize: scaledValue(17),
    lineHeight: scaledHeightValue(22),
    letterSpacing: scaledValue(17 * -0.041),
    fontFamily: fonts?.CLASH_GRO_MEDIUM,
  },
  buttonView: {
    paddingHorizontal: scaledValue(24),
    marginTop: scaledValue(40),
    marginBottom: scaledValue(30),
  },
  cancelText: {
    fontSize: scaledValue(16),
    lineHeight: scaledHeightValue(19.2),
    letterSpacing: scaledValue(16 * -0.02),
    fontFamily: fonts?.SATOSHI_BOLD,
    color: colors.jetBlack,
  },
  cancelButtonStyle: {
    backgroundColor: '#37223C26',
    width: '100%',
    height: scaledValue(47),
    borderRadius: scaledValue(14),
    alignSelf: 'center',
  },
  professionalButton: {
    borderWidth: scaledValue(0.5),
    height: scaledValue(48),
    marginTop: scaledValue(20),
    borderRadius: scaledValue(24),
    paddingHorizontal: scaledValue(20),
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    width: Dimensions.get('window').width / 2.3,
  },
  professionalText: {
    fontSize: scaledValue(16),
    lineHeight: scaledHeightValue(16),
    letterSpacing: scaledValue(16 * -0.03),
    color: '#312943',
  },
});
